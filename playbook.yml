---
- hosts: all
  sudo: true
  vars_files:
    - "vars/urls.yml"
  tasks:
    - name: Apt dist update
      apt: upgrade=dist update_cache=true cache_valid_time=600

    - name: Install Avahi Daemon
      apt: name=avahi-daemon

    - name: Install Samba
      apt: name=samba

    - name: webmin | Add webmin repo
      apt_repository: repo='deb http://download.webmin.com/download/repository sarge contrib' update_cache=yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: webmin | Add webmin mirror repo 
      apt_repository: repo='deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib' update_cache=yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: webmin | Addkey webmin
      apt_key: url=http://www.webmin.com/jcameron-key.asc  state=present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: webmin | Install webmin
      apt: pkg={{ item }} state=present update_cache=yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      with_items:
       - webmin

    - name: Install FreePBX/Asterisk depends
      apt: pkg={{item}} state=installed
      with_items:
       - build-essential
       - linux-headers-{{ ansible_kernel }}
       - openssh-server
       - apache2
       - mysql-server
       - mysql-client
       - bison
       - flex
       - php5
       - php5-curl
       - php5-cli
       - php5-mysql
       - php-pear
       - php-db
       - php5-gd
       - curl
       - sox
       - libncurses5-dev
       - libssl-dev
       - libmysqlclient-dev
       - mpg123
       - libxml2-dev
       - libnewt-dev
       - sqlite3
       - libsqlite3-dev
       - pkg-config
       - automake
       - libtool
       - autoconf
       - git
       - subversion
       - unixodbc-dev
       - uuid
       - uuid-dev
       - libasound2-dev
       - libogg-dev
       - libvorbis-dev
       - libcurl4-openssl-dev
       - libical-dev
       - libneon27-dev
       - libsrtp0-dev
       - libspandsp-dev

    - name: Git clone jansson
      git: repo={{ janssonurl }} dest=/tmp/jansson

    - name: Git clone pjproject
      git: repo={{ pjprojecturl }} dest=/tmp/pjproject

    - name: Download Asterisk
      get_url: url={{ asteriskurl }} dest=/tmp/{{ asteriskfile }}

    - name: Download Freepbx
      get_url: url={{ freepbxurl }} dest=/tmp/{{ freepbxfile }}

    - name: Unarchive Asterisk
      unarchive: src=/tmp/{{ asteriskfile }} dest=/tmp/ copy=no

    - name: Unarchive FreePBX
      unarchive: src=/tmp/{{ freepbxfile }} dest=/usr/src/ copy=no

    - name: Install PearDB
      shell: pear uninstall db && pear install DB

    - name: Compile pjproject
      shell: ./configure --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr && make dep && make && make install
      args:
        chdir: /tmp/pjproject
        creates: build.mak

    - name: Compile jansson
      shell: autoreconf -i && ./configure && make && make install
      args:
        chdir: /tmp/jansson
        creates: Makefile

    - name: Compile Asterisk
      shell: ./configure && contrib/scripts/get_mp3_source.sh && make && make install && make config && ldconfig
      args:
        chdir: /tmp/asterisk-12.8.2
        creates: makeopts

    - name: Add asterisk user
      user: name=asterisk

    - name: Change permissions
      file: path=/var/run/asterisk state=directory owner=asterisk
      file: path=/etc/asterisk state=directory owner=asterisk recurse=yes
      file: path=/var/lib/asterisk state=directory owner=asterisk recurse=yes
      file: path=/var/log/asterisk state=directory owner=asterisk recurse=yes
      file: path=/var/spool/asterisk state=directory owner=asterisk recurse=yes
      file: path=/usr/lib/asterisk state=directory owner=asterisk recurse=yes

    - name: Remove /var/www/html
      file: path=/var/www/html state=absent

    - name: Backup apache config
      shell: cp /etc/apache2/envvars /etc/apache2/envvars_orig
      args:
        creates: /etc/apache2/envvars_orig

    - name: Modify Apache Config
      lineinfile: dest=/etc/php5/apache2/php.ini regexp="^upload_max_filesize =*" line="upload_max_filesize = 120M" state=present

    - name: Modfiy Apache User envvar
      lineinfile: dest=/etc/apache2/envvars regexp="^export APACHE_RUN_USER=*" line="export APACHE_RUN_USER=asterisk" state=present

      lineinfile: dest=/etc/apache2/envvars regexp="^export APACHE_RUN_GROUP=*" line="export APACHE_RUN_GROUP=asterisk" state=present

    - name: Modfiy Apache Group envvar
      lineinfile:
        dest: /etc/apache2/envvars
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - { regexp: "^export APACHE_RUN_USER=www-data", line: "export APACHE_RUN_USER=asterisk" }
        - { regexp: "^export APACHE_RUN_GROUP=www-data", line: "export APACHE_RUN_GROUP=asterisk" }

    - name: Template odbc
      template: src=templates/odbcinst.ini dest=/etc/odbcinst.ini owner=root group=root mode=0644
      template: src=templates/odbc.ini dest=/etc/odbc.ini owner=root group=root mode=0644
